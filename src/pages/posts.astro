---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Body from '../components/Body.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'
import Main from '../components/Main.astro'
import PageHeader from '../components/PageHeader.astro'

import dayjs from 'dayjs'
import 'dayjs/locale/zh-cn'

dayjs.locale('zh-cn')

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob('./posts/*.{md,mdx}')).sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf()
)

// 计算阅读时间的函数
function getReadingTime(content: string) {
  const wordsPerMinute = 200
  const words = content.split(/\s+/).length
  const readingTime = Math.ceil(words / wordsPerMinute)
  return readingTime
}

// 定义类型
interface PostType {
  url: string
  frontmatter: {
    title: string
    pubDate: string
    description?: string
    tags?: string[]
    heroImage?: string
  }
  compiledContent: () => string
}

interface MonthData {
  name: string
  posts: PostType[]
}

// 按年份和月份分组文章
const postsByYear = posts.reduce((acc, post) => {
  const year = dayjs(post.frontmatter.pubDate).format('YYYY')
  const month = dayjs(post.frontmatter.pubDate).format('MM')
  const monthName = `${parseInt(month)}月`

  if (!acc[year]) {
    acc[year] = {}
  }
  if (!acc[year][month]) {
    acc[year][month] = {
      name: monthName,
      posts: []
    }
  }
  acc[year][month].posts.push(post as PostType)
  return acc
}, {} as Record<string, Record<string, MonthData>>)
---

<!DOCTYPE html>
<html lang="zh" style="overflow: overlay;min-height: 100vh;">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header />
    <Main>
      <PageHeader title="文章" description="记录知识与思考沿途碰撞的痕迹" />

      <div class="max-w-6xl mx-auto px-4">
        {/* 时间轴布局 */}
        <div class="space-y-12">
          {
            Object.entries(postsByYear)
              .sort(([a], [b]) => parseInt(b) - parseInt(a))
              .map(([year, months]) => (
                <section class="relative">
                  {/* 年份标题 */}
                  <div class="relative mb-8">
                    <div class="flex items-baseline gap-4 mb-4">
                      <h2 class="text-3xl font-bold text-gray-900 dark:text-white">
                        {year}
                      </h2>
                      <div class="text-sm text-gray-500 dark:text-gray-400 font-medium">
                        {(Object.values(months) as MonthData[]).reduce(
                          (sum, month) => sum + month.posts.length,
                          0
                        )}{' '}
                        篇文章
                      </div>
                    </div>
                    <div class="w-full h-px bg-gradient-to-r from-gray-300 via-gray-200 to-transparent dark:from-gray-600 dark:via-gray-700 dark:to-transparent" />
                  </div>

                  {/* 月份分组 */}
                  <div class="space-y-8">
                    {(Object.entries(months) as [string, MonthData][])
                      .sort(([a], [b]) => parseInt(b) - parseInt(a))
                      .map(([monthNum, monthData]) => (
                        <div class="relative">
                          {/* 月份标题 */}
                          <div class="flex items-center mb-6">
                            <h3 class="text-xl font-semibold text-gray-800 dark:text-gray-200">
                              {monthData.name}
                            </h3>
                            <div class="flex-1 h-px bg-gray-200 dark:bg-gray-700 ml-4" />
                            <div class="text-sm text-gray-500 dark:text-gray-400">
                              {monthData.posts.length} 篇
                            </div>
                          </div>

                          {/* 文章卡片网格 */}
                          <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                            {monthData.posts.map((post: PostType) => (
                              <article class="group relative rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 border border-gray-100 dark:border-gray-700 hover:border-orange-300 dark:hover:border-orange-400">
                                <a href={post.url} class="block relative">
                                  {/* 背景图片 */}
                                  {post.frontmatter.heroImage ? (
                                    <div class="absolute inset-0">
                                      <img
                                        src={post.frontmatter.heroImage}
                                        alt={post.frontmatter.title}
                                        class="w-full h-full object-cover"
                                      />
                                      <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-black/10" />
                                    </div>
                                  ) : (
                                    <div class="absolute inset-0 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700" />
                                  )}

                                  {/* 内容层 */}
                                  <div class="relative p-4 h-[200px] flex flex-col justify-between">
                                    {/* 头部信息 */}
                                    <div class="flex items-start justify-between mb-3">
                                      <div class="flex-1">
                                        <time
                                          datetime={post.frontmatter.pubDate}
                                          class={`text-xs font-medium px-2 py-1 rounded-full ${
                                            post.frontmatter.heroImage
                                              ? 'text-orange-400 bg-black/20 backdrop-blur-sm'
                                              : 'text-orange-500 bg-orange-50 dark:bg-orange-500/10'
                                          }`}
                                        >
                                          {dayjs(
                                            post.frontmatter.pubDate
                                          ).format('MM-DD')}
                                        </time>
                                      </div>
                                      <div class="flex-shrink-0 ml-3">
                                        <div
                                          class={`flex items-center text-xs ${
                                            post.frontmatter.heroImage
                                              ? 'text-white/80 bg-black/20 backdrop-blur-sm rounded-full px-2 py-1'
                                              : 'text-gray-500 dark:text-gray-400'
                                          }`}
                                        >
                                          <svg
                                            class="w-3 h-3 mr-1"
                                            fill="none"
                                            stroke="currentColor"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              stroke-linecap="round"
                                              stroke-linejoin="round"
                                              stroke-width="2"
                                              d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                                            />
                                          </svg>
                                          {getReadingTime(
                                            post.compiledContent()
                                          )}
                                          min
                                        </div>
                                      </div>
                                    </div>

                                    {/* 标题 */}
                                    <h2
                                      class={`text-lg font-semibold mt-1 mb-2 group-hover:text-orange-500 transition-colors duration-200 ${
                                        post.frontmatter.heroImage
                                          ? 'text-white drop-shadow-lg'
                                          : 'text-gray-900 dark:text-white'
                                      }`}
                                      style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;"
                                    >
                                      {post.frontmatter.title}
                                    </h2>

                                    {/* 描述 */}
                                    {post.frontmatter.description && (
                                      <p
                                        class={`text-sm leading-relaxed mb-3 ${
                                          post.frontmatter.heroImage
                                            ? 'text-white/90 drop-shadow-md'
                                            : 'text-gray-600 dark:text-gray-300'
                                        }`}
                                        style="display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;"
                                      >
                                        {post.frontmatter.description}
                                      </p>
                                    )}

                                    {/* 标签 */}
                                    {post.frontmatter.tags && (
                                      <div class="flex flex-wrap gap-1 mt-auto">
                                        {post.frontmatter.tags
                                          .slice(0, 3)
                                          .map((tag: string) => (
                                            <span
                                              class={`text-xs px-2 py-0.5 rounded ${
                                                post.frontmatter.heroImage
                                                  ? 'text-white bg-white/20 backdrop-blur-sm'
                                                  : 'text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-700'
                                              }`}
                                            >
                                              #{tag}
                                            </span>
                                          ))}
                                        {post.frontmatter.tags.length > 3 && (
                                          <span
                                            class={`text-xs ${
                                              post.frontmatter.heroImage
                                                ? 'text-white/70'
                                                : 'text-gray-500 dark:text-gray-500'
                                            }`}
                                          >
                                            +{post.frontmatter.tags.length - 3}
                                          </span>
                                        )}
                                      </div>
                                    )}
                                  </div>
                                </a>

                                {/* 悬停效果 */}
                                <div class="absolute inset-0 rounded-lg bg-gradient-to-r from-orange-500/10 to-pink-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none" />
                              </article>
                            ))}
                          </div>
                        </div>
                      ))}
                  </div>
                </section>
              ))
          }
        </div>

        {/* 统计信息 */}
        <div class="mt-16 text-center">
          <div
            class="inline-flex items-center px-6 py-3 bg-gray-50 dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700"
          >
            <svg
              class="w-5 h-5 mr-2 text-orange-500"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              ></path>
            </svg>
            <span class="text-gray-600 dark:text-gray-300">
              共 <span class="font-semibold text-orange-500"
                >{posts.length}</span
              > 篇文章，跨越 <span class="font-semibold text-orange-500"
                >{Object.keys(postsByYear).length}</span
              > 年
            </span>
          </div>
        </div>
      </div>
    </Main>
    <Footer />
  </Body>
</html>
